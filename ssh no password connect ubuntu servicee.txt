无密码登录的优点：
1、连接更安全，可避免man in the middle的攻击（中间人）
2、连接更方便，可设置为自动连接
3、可方便禁止ftp，服务器更安全

一、准备：
如果没有安装，则先手动安装：
#：whereis ssh  //查看是否安装ssh
#：sudo apt-get install ssh  //安装ssh


二、制作密钥对：
#：ssh-keygen       //建立密钥对，如登录root则建立root的密钥对，登录admin生成则为admin的密钥对（一个萝卜一个坑，一一对应）
  Generating public/private rsa key pair.
  Enter file in which to save the key (/home/eai/.ssh/id_rsa):   <======enter确认，也可自定义密钥对存放位置
  Enter passphrase (empty for no passphrase):    <======输入密码锁，直接按enter则默认无密码
  Your identification has been saved in /home/eai/.ssh/id_rsa.    <====== 私钥
  Your public key has been saved in /home/eai/.ssh/id_rsa.pub.    <====== 公钥
  The key fingerprint is:
  77:d0:af:76:97:fd:97:dd:e5:cc:47:01:1f:40:ae:b6 eai@eai
  The key's randomart image is:
  +--[ RSA 2048]----+
  |            .o.  |
  |           ... . |
  |          . ..o .|
  |           ... o |
  |        S .o. . .|
  |         .....  =|
  |           Eo .*B|
  |           . . oX|
  |                +|
  +-----------------+

现在，在  ~/.ssh 的目录中生成了两个密钥文件。id_rsa 为私钥，id_rsa.pub 为公钥。


三、在服务器上安装公钥：
admin@websitetest：~/.ssh$ cat id_rsa.pub >> authorized_keys        //admin为其他用户名，将id_rsa.pub改名为authorized_keys(必须改名)

然后设置一下文件的权限：
admin@websitetest：~/.ssh$：chmod 400 ~/.ssh/authorized_keys      //修改文件权限
admin@websitetest：~/.ssh$：chmod 700 ~/.ssh 
admin@websitetest：sudo rm -R ~/.ssh/id_rsa.pub        //删除公钥文件（安全着想）


=====================================================================================================================
这里有几点要说明下, 关于为什么要将公钥名称更改为authorized_keys, 这是因为ssh服务会在客户端发起连接请求的时候在对应
用户家目录的.ssh文件夹下寻找 authorized_keys 文件, 并打开访问文件中包含的公钥. 除此之外, authorized_keys 文件中
可以包含多个公钥, 因此上述的命令中用了>>指令将之前生成的公钥追加至authorized_keys文件的尾部.
=====================================================================================================================



四、下载私钥
可用scp下载或用Filezilla（ssh、ftp软件）来下载（前面的还没弄懂，后面的比较方便）


五、下载puttygen转换私钥文件：
  1.登录网站https://www.putty.org/ 查找下载 puttygen
  2.运行PuTTYgen工具, 点击 Load, 选择要转换的私钥文件.找到之前存放私钥文件的地方.
  这里需要将文件名后面的文件类型更改为All File(.)才能看到服务器端产生的私钥文件.
  此时, PuTTYgen会要求你输入passphrase口令, 该口令是之前在服务器端利用ssh-keygen
  生成密钥对时,由用户输入的一个口令, 如果为空, 直接回车即可.输入口令, 点击ok, PuTTYge
  n会提示私钥格式转换成功，点击 Save private key 将转换成功后的 ppk 文件保存至自己想
  要的指定位置. 此时, 私钥的转换工作结束, 接下来配置PuTTY.

六、导入私钥测试：
先退出服务器连接

双击打开PuTTY, 在左侧的列表中找到Connection-->SSH-->Auth, 在右边的窗口中, 点击browser选择需要导入的私，
然后找到刚才利用PuTTYgen转换得到的ppk私钥文件，之后点击左侧列表中的Session, 来配置SSH会话, 即连接的具体参数，
此处需要配置服务器的IP地址, 以及要保存的连接名称(任意取), 设定完后点击右侧的 Save 按钮将连接保存, 这样下次就
不需要设置而能快速访问了.


七、测试登录：
  1.双击打开PuTTY, 选中之前我们保存的名为 Whatever you like 的连接, 点击Open, 发起SSH连接
  2.我们会看到一个黑色的连接对话框, 在输入要登陆的用户名以及在生成密钥对时要求的passphrase后, 成功地登陆了远程服务器.（无设置passphrase则跳过）


八、配置ssh服务：
SSH服务配置 SSH服务的配置文件主要有2个, 分别为 /etc/ssh/ssh_config 以及 /etc/ssh/sshd_config

（一）ssh_config配置文件：
这里我们先对ssh_config配置文件进行修改, 添加或修改如下几项（可以直接添加，如修改则把#号及其前面的空格删除）
#：nano /etc/ssh/ssh_config

1 # 使用RSA算法进行安全验证
2 RSAAuthentication yes
3 # 关闭密码验证
4 PasswordAuthentication no
5 # 强制使用的SSH2
6 Protocol 2

解释：
========================================================================================================================
由于接下来我们会选用RSA算法来产生密钥对, 因此将RSAAuthentication设置成yes, PasswordAuthentication设置成no使得客户端无法通过
不安全的账户密码方式登录, 增强安全性. Protocol 2设定强制使用SSH的第二版. 当然, 如果希望仅在某一个网段内进行SSH连接, 那么可以设
置 Host *选项, 将*换成允许的网段, 例如192.168.1.代表IP地址为192.168.1.x的电脑可以进行SSH连接, 而其他IP地址的电脑则无法连接. 
关于ssh_config文件的具体选项的解释如下所示
========================================================================================================================

1   Host *
2   # 选项“Host”只对能够匹配后面字串的计算机有效。“*”表示所有的计算机。
3   ForwardAgent no
4   # “ForwardAgent”设置连接是否经过验证代理（如果存在）转发给远程计算机。
5   ForwardX11 no
6   # “ForwardX11”设置X11连接是否被自动重定向到安全的通道和显示集（DISPLAY set）。
7   RhostsAuthentication no
8   # “RhostsAuthentication”设置是否使用基于rhosts的安全验证。
9   RhostsRSAAuthentication no
10  # “RhostsRSAAuthentication”设置是否使用用RSA算法的基于rhosts的安全验证。
11  RSAAuthentication yes
12  # “RSAAuthentication”设置是否使用RSA算法进行安全验证。
13  PasswordAuthentication no
14  # “PasswordAuthentication”设置是否使用口令验证。
15  FallBackToRsh no
16  # “FallBackToRsh”设置如果用ssh连接出现错误是否自动使用rsh。
17  UseRsh no
18  # “UseRsh”设置是否在这台计算机上使用“rlogin/rsh”。
19  BatchMode no
20  # “BatchMode”如果设为“yes”，passphrase/password（交互式输入口令）的提示将被禁止。当不能交互式输入口令的时候，这个选项对脚本文件和批处理任务十21 分有用。
22  CheckHostIP yes
23  # “CheckHostIP”设置ssh是否查看连接到服务器的主机的IP地址以防止DNS欺骗。建议设置为“yes”。
24  StrictHostKeyChecking no
25  # “StrictHostKeyChecking”如果设置成“yes”，ssh就不会自动把计算机的密匙加入“$HOME/.ssh/known_hosts”文件，并且一旦计算机的密匙发生了变化，就拒26  绝连接。
27  IdentityFile ~/.ssh/identity
28  # “IdentityFile”设置从哪个文件读取用户的RSA安全验证标识。
29  Port 22
30  # “Port”设置连接到远程主机的端口。
31  Cipher blowfish
32  # “Cipher”设置加密用的密码。
33  EscapeChar ~
34  # “EscapeChar”设置escape字符。


（二）sshd_config配置文件
#：nano /etc/ssh/sshd_config

在sshd_config文件中添加或修改如下选项
1 #禁止root登录
2 PermitRootLogin no                  //设置前记得先新增普通用户并赋予sudo权限
3 #不允许空密码
4 PermitEmptyPasswords no
5 重启服务器
6 sudo service ssh restart
解释：
======================================================================================================================================
出于安全性的考虑, 我们不允许客户端直接用root账户进行登录, 故将PermitRootLogin设置成no(当然, 可以在登陆了其他用户
后切换至root用户), 同时不允许空密码. sshd_config文件的其它具体选项的解释如下所示
======================================================================================================================================

如果重启失败：sshd: unrecognized service ， 
就查看SSH是否活动： eai@eai:~/.ssh$ service ssh status ，
如果是类似 ssh start/running, process 1579， 

就直接这样重启： eai@eai:~/.ssh$ sudo /etc/init.d/ssh restart


由于接下来我们会选用RSA算法来产生密钥对, 因此将RSAAuthentication设置成yes, PasswordAuthentication设置成no使得客户端无法
通过不安全的账户密码方式登录, 增强安全性. Protocol 2设定强制使用SSH的第二版. 当然, 如果希望仅在某一个网段内进行SSH连接, 那
么可以设置 Host *选项, 将*换成允许的网段, 例如192.168.1.代表IP地址为192.168.1.x的电脑可以进行SSH连接, 而其他IP地址的电脑
则无法连接. 关于ssh_config文件的具体选项的解释如下所示

1   Port 22                                   //建议修改端口，避免暴力解码
2   # “Port”设置sshd监听的端口号。   
3   ListenAddress 192.168.1.1
4   # “ListenAddress”设置sshd服务器绑定的IP地址。
5   HostKey /etc/ssh/ssh_host_key
6   # “HostKey”设置包含计算机私人密匙的文件。
7   ServerKeyBits 1024
8   # “ServerKeyBits”定义服务器密匙的位数。
9   LoginGraceTime 600
10  # “LoginGraceTime”设置如果用户不能成功登录，在切断连接之前服务器需要等待的时间（以秒为单位）。
11  KeyRegenerationInterval 3600
12  # “KeyRegenerationInterval”设置在多少秒之后自动重新生成服务器的密匙（如果使用密匙）。重新生成密匙是为了防止用盗用的密匙解密被截获的信息。
13  PermitRootLogin no
14  # “PermitRootLogin”设置root能不能用ssh登录。这个选项一定不要设成“yes”。
15  IgnoreRhosts yes
16  # “IgnoreRhosts”设置验证的时候是否使用“rhosts”和“shosts”文件。
17  IgnoreUserKnownHosts yes
18  # “IgnoreUserKnownHosts”设置ssh daemon是否在进行RhostsRSAAuthentication安全验证的时候忽略用户的“$HOME/.ssh/known_hosts”
19  StrictModes yes
20  # “StrictModes”设置ssh在接收登录请求之前是否检查用户家目录和rhosts文件的权限和所有权。这通常是必要的，因为新手经常会把自己的目录和文件设成任何人都有写权限。       
21  X11Forwarding no
22  # “X11Forwarding”设置是否允许X11转发。
23  PrintMotd yes
24  # “PrintMotd”设置sshd是否在用户登录的时候显示“/etc/motd”中的信息。
25  SyslogFacility AUTH
26  # “SyslogFacility”设置在记录来自sshd的消息的时候，是否给出“facility code”。
27  LogLevel INFO
28  # “LogLevel”设置记录sshd日志消息的层次。INFO是一个好的选择。查看sshd的man帮助页，已获取更多的信息。
29  RhostsAuthentication no
30  # “RhostsAuthentication”设置只用rhosts或“/etc/hosts.equiv”进行安全验证是否已经足够了。
31  RhostsRSAAuthentication no
32  # “RhostsRSA”设置是否允许用rhosts或“/etc/hosts.equiv”加上RSA进行安全验证。
33  RSAAuthentication yes
34  # “RSAAuthentication”设置是否允许只有RSA安全验证。
35  PasswordAuthentication no
36  # “PasswordAuthentication”设置是否允许口令验证。
37  PermitEmptyPasswords no
38  # “PermitEmptyPasswords”设置是否允许用口令为空的帐号登录。
39  AllowUsers admin
40  # “AllowUsers”的后面可以跟着任意的数量的用户名的匹配串（patterns）或user@host这样的匹配串，这些字符串用空格隔开。主机名可以是DNS名或IP地址。












=======================================================================================================================
备注说明：
有几点需要在本文的最后稍微做下说明.

1.SSH配置的关键在于首先需要先生成一个密钥对, 该密钥对是由哪个用户生成以及是在服务器端生成还是在客户端生成的都不重要, 重要的是最
  后这个密钥对中的公钥必须要在服务器端的特定用户家目录下的.ssh文件夹中,并命名为authorized_keys,而私钥则必须经由客户端转换后导
  入客户端软件,这样才能满足SSH连接的需求.
  
2服务器端的公钥权限不对,无法被读取有可能导致在进行SSH登陆的时候被服务器端拒绝.

3.一个萝卜一个坑, 不同用户不可共同使用同一组密钥对, 否则可能导致登陆失败.

4.服务器之所以接受该用户利用SSH登陆是因为在服务器端的改用户家目录的.ssh文件夹下有公钥文件, 并且和发起请求客户端的私钥文件是配对
  的. 显然的, 如果发起请求的用户在服务器端的家目录.ssh文件夹下没有公钥文件, 那么便无法成功登陆.










