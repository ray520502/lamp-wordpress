准备

1.更新服务器
#:apt-get update
#:apt-get upgrade -y

2.尽量不要用root用户登录
#:adduser example_user    //example_user你的新用户名
#:adduser example_user sudo    //example_user你的新用户名，增加sudo权限

3.使用SSH迷药认证登录
详细参考lamp-wordpress库内的笔记内容
ssh no password connect ubuntu security

4.设置防火墙
Ubuntu 上 ufw 是默认安装的，在 Debian 上只需要执行一下 sudo apt-get install ufw 。

默认情况下 ufw 应该拒绝一切入站连接、允许全部出站连接，但是这行不通（那样的话你怎么连进来呢？）。
我们来一步步地显式允许我们视为OK的连接。首先我们需要保证支持 IPV6 ，只需打开配置文件：

#:sudo nano /etc/default/ufw
允许IPV6=yes  //默认为同意

其它要打开的端口我们用 ufw 工具在命令行添加，这非常方便：
例如：
#:sudo ufw allow from 你的IP to any port 22         //如果你要设置第一条规则（你应该），
                                                      要确保你有个固定 IP（企业光纤）或安全的 VPN，
                                                      动态 IP 会在某天把你锁到服务器外面
#:sudo ufw allow from 192.168.1.1   //允许此IP访问所有的本机端口,同样要确保你有企业光纤或VPN等固定ip
#:sudo ufw allow 22            //添加允许外部访问22端口，SSH默认端口，如果还未修改ssh端口必须要先保证本端口正常，否则无法ssh连接
#:sudo ufw allow 80            //添加允许外部访问80端口，wordpress默认端口
#:sudo ufw allow 25            //添加允许外部访问25端口，sendmail默认端口
#:sudo ufw allow 443           //添加允许外部访问443端口，SSL监听端口
#:sudo ufw disable             //关闭ufw防火墙
#:sudo ufw enable              //启用ufw防火墙
#:sudo ufw status              //查看防火墙状态
#:sudo ufw default deny        //默认拒绝

===================================================================================================================
其他常用命令：
#:sudo ufw deny smtp       //禁止外部访问smtp服务，简易邮件传输协议
#:sudo ufw delete allow smtp      //删除上面建立的某条规则
#:sudo ufw deny proto tcp from 10.0.0.0/8 to 192.168.0.1 port 22 要拒绝所有的TCP流量从10.0.0.0/8 到192.168.0.1地址的22端口
#:ufw logging LEVEL     //设置日志级别'off', 'low', 'medium', 'high' and 'full'


可以允许所有RFC1918网络（局域网/无线局域网的）访问这个主机（/8,/16,/12是一种网络分级）：
#:sudo ufw allow from 10.0.0.0/8
#:sudo ufw allow from 172.16.0.0/12
#:sudo ufw allow from 192.168.0.0/16
*第一个命令是个冗余措施，保证只有从我们的 IP 才能连接 ssh标准端口，第二个和第三个用来打开 http 和 https 。
===================================================================================================================

5.自动应用安全更新
安全更新并不完美，但及时安装补丁还是更好些。
#:sudo apt-get install unattended-upgrades
#:sudo dpkg-reconfigure -plow unattended-upgrades
执行后进入交互界面，选择Yes->OK就可以了。

  配置更新内容
  默认情况下只安装安全相关的更新，不过你也可以根据你的需要修改下面路径文件，以决定要自动安装哪些更新：
  #:nano /etc/apt/apt.conf.d/50unattended-upgrades
  
  ================================================================
  Unattended-Upgrade::Allowed-Origins {
         "${distro_id}:${distro_codename}";
         "${distro_id}:${distro_codename}-security";
  //      "${distro_id}:${distro_codename}-updates";
  //      "${distro_id}:${distro_codename}-proposed";
  //      "${distro_id}:${distro_codename}-backports";
  };
  ================================================================
  设置更新频率
  默认情况下更新频率是一天一次，可以在/etc/apt/apt.conf.d/20auto-upgrades文件里修改这个设置，文件里的1表示一天，换成你想设置的天数即可。
  
  APT::Periodic::Update-Package-Lists "1";
  APT::Periodic::Unattended-Upgrade "1";

到这里你已经准备就绪了。

6.fail2ban
Fail2ban 软件包主动拦阻可疑行为。根据官方 wiki（http://www.fail2ban.org/wiki/index.php/Main_Page），Fail2ban 扫描日志文件（比如：/var/log/apache/error_log ），通过在 iptables 添加规则来阻止那些有恶意迹象（多次密码错误，探寻漏洞等…）的 IP。

Fail2Ban 自带多种协议过滤器（HTTPS, STMP, SSH等），它还与 Apache 、Nginx等众多服务集成，提供一定程度的 DDoS 或暴力破解防护。不过使用的时候要
小心，因为封堵 DDoS 攻击的源地址，可能也会阻止正常用户一段时间。它带有大量的配置选项，包括集成SendMail，当某个 IP 被封堵时发出邮件通知。你尽可
以点击上述这些链接，看看哪些选项对你的胃口。

执行安装：
#:apt-get install fail2ban

配置文件在/etc/fail2ban/fail2ban.conf
可搜索email修改被攻击时接收通知email地址。
#：sudo nano /etc/fail2ban/fail2ban.conf
  如下修改
  destemail = 25243888@qq.com     //25243888@qq.com 你的email地址

=================================================================================================================

常用指令：
#：fail2ban-client status         //查看 Fail2Ban 的執行狀態
#：fail2ban-client status ssh-iptables          //查看 Fail2Ban 查看設定檔的執行狀態
#：iptables -n -L INPUT | grep fail2ban         //查看防火牆的設定
#：iptables --list                              //從防火牆查看有哪些 IP 被封鎖
#：service fail2ban restart                     //重启防火墙

=================================================================================================================


7.双重认证
构建任何敏感系统时，双重认证(2 Factor Authentication, 2FA)不是额外的要求，而是必须的。
理论上，如果你强制启用 2FA (加上以上所有措施），那么为了登录你的服务器（应用程序漏洞除外），
攻击者必须：
 1.获得你的证书来登录VPN
 2.获得你的电脑、拿到你的私钥
 3.获得你私钥的密码短语
 4.获得你的电话以遍完成双重认证
 
这就需要跨越不少的障碍了，即使都得手了，攻击者还是需要 deploy 用户的密码才能通过 sudo 获得 root 权限，而密码可是用 AES 加密保存的。

安装这个软件包：
#：apt-get install libpam-google-authenticator

运行这个命令来设置，根据提示配置：
#：su deploy
#：google-authenticator

2FA非常简单，而且增加了很强的一层安全性。

8.Logwatch检测安装
（安装logwatch前需先安装配置sendmail客户端，具体参考sendmail配置安装教程）
这不仅仅是个简单的小快乐和监控工具，用来事后查看服务器发生了什么。Logwatch 监控你的日志文件，经过配置后，
它可以每天发送格式精美的报告邮件。邮件内容看起来非常有喜感，你会惊讶每天有那么多要进入你服务器的企图。
我装这个软件包没有别的原因，就是给团队显示一下好的安全性配置有多么重要。

DigitalOcean 有一篇关于 logwatch 安装配置的详细文档（https://www.digitalocean.com/community/tutorials/
how-to-install-and-use-logwatch-log-analyzer-and-reporter-on-a-vps），但是如果时间限制在 10 分钟以内，
我们只会完成安装，然后配置 cron 计划任务来每天发送邮件。

1.安装：
#：sudo apt-get install logwatch

2.配置Logwatch：
#：nano /usr/share/logwatch/default.conf/logwatch.conf

 按照一下修改
 MailTo = root 改为 MailTo = 25243818@abc.com
 mailer = "sendmail -t"
 Detail = High
 Format = html
 Service = All

3.测试：
logwatch --mailto 25243818@abc.com  //you email address

安装后的目录文件说明：
/usr/share/logwatch
    default.conf/     # 配置目录
        logwatch.conf   # 主配置文件，收件人，级别等
        logfiles/       # 定义待分析服务的日志文件组路径，相对于/var/log(*.conf)
        services/       # 自定义需分析日志的Service目录(*.conf)
    scripts/          # 可执行脚本
        logwatch.pl     # 启动分析的perl脚本，/usr/sbin/logwatch的源链接
        logfiles/       # 可包含多个logwatch日志文件组的子目录，对应的日志服务运行的时候，子目录下的脚本会自动被调用
        services/       # logwatch日志服务的过滤脚本，一一对应
        shared/         # 可被多个logwatch日志服务引用的脚本
    dist.conf/
        logfiles/
        services/
    lib/



*安装mc工具可以快速用鼠标点击打开文件夹编辑文档等各种操作
#：sudo apt-get install mc -y






